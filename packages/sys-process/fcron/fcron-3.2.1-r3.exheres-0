# Copyright 2019 HC
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'fcron-3.2.1-r3.ebuild' from Gentoo, which is:
# 	Copyright 1999-2018 Gentoo Foundation

WANT_AUTOMAKE=none

#inherit cron pam flag-o-matic user autotools versionator systemd
require cron-install [ crond=cron crontab=fcrontab ] pam flag-o-matic autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.16 1.15 ] ] 
require openrc-service [ openrc_confd_files=[ "${FILES}"/openrc/confd/ ] ]

SUMMARY="A command scheduler with extended capabilities over cron and anacron"
HOMEPAGE="http://fcron.free.fr/"
DOWNLOADS="http://fcron.free.fr/archives/${PNV}.src.tar.gz"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~arm ~hppa ~ia64 ~mips ~ppc ~ppc64 ~sparc ~x86 ~x86-fbsd"
MYOPTIONS="audit debug pam selinux l10n_fr mta system-crontab readline"

DEPENDENCIES="
	build:
		audit? ( app-admin/audit:= )
		readline? ( sys-libs/readline:= )
		selinux? ( sys-libs/libselinux:= )
	build+run:
		group/cron
		group/fcron
		user/cron
		user/fcron
		pam? ( sys-libs/pam:= )
		mta? ( virtual/mta:= )
"

DEFAULT_SRC_PREPARE_PATCHES=(
	"${FILES}"/${PN}-3.1.1-noreadline.patch
	"${FILES}"/${PN}-3.2.1-configure-fix-audit-parameter-check.patch
	"${FILES}"/${PN}-3.2.1-musl-getopt-order.patch
)

pkg_setup() {
	enewgroup fcron
	enewuser fcron -1 -1 -1 fcron
	rootuser=$(egetent passwd 0 | cut -d ':' -f 1)
	[[ ${rootuser} ]] || rootuser=root
	rootgroup=$(egetent group 0 | cut -d ':' -f 1)
	[[ ${rootgroup} ]] || rootgroup=root
}

src_prepare() {
	default

	# respect LDFLAGS
	edo sed -i "s:\(@LIBS@\):\$(LDFLAGS) \1:" Makefile.in 

	# Adjust fcrontab path
	edo sed -i -e 's:/etc/fcrontab:/etc/fcron/fcrontab:' script/check_system_crontabs.sh

	edo mv configure.in configure.ac

	edo cp "${FILES}"/crontab.2 "${WORKBASE}"/crontab

	eautoconf
}

src_configure() {
	# Don't try to pass --with-debug as it'll play with cflags as
	# well, and run foreground which is a _very_ nasty idea for
	# Gentoo.
	option debug && append-cppflags -DDEBUG

	# bindir is used just for calling fcronsighup
	econf \
		--with-cflags="${CFLAGS}" \
		--bindir=/usr/$(exhost --target)/libexec \
		--sbindir=/usr/$(exhost --target)/libexec \
		$(option_with audit) \
		$(option_with mta sendmail) \
		$(option_with pam) \
		$(option_with readline) \
		$(option_with selinux) \
		--sysconfdir=/etc/fcron \
		--with-username=fcron \
		--with-groupname=fcron \
		--with-piddir=/run \
		--with-spooldir=/var/spool/fcron \
		--with-fifodir=/run \
		--with-fcrondyn=yes \
		--disable-checks \
		--with-editor=/usr/libexec/editor \
		--with-shell=/bin/sh \
		--without-db2man \
		--without-dsssl-dir \
		--with-rootname=${rootuser} \
		--with-rootgroup=${rootgroup} \
		--with-systemdsystemunitdir="$(systemd_get_systemunitdir)"
}

src_compile() {
	default

	# bug #216460
	edo sed -i \
		-e 's:/usr/local/etc/fcron:/etc/fcron/fcron:g' \
		-e 's:/usr/local/etc:/etc:g' \
		-e 's:/usr/local/:/usr/:g' \
		doc/*/*/*.{txt,1,5,8,html}
}

src_install() {
	keepdir /etc/cron.d
	install_openrc_files
	
	if option system-crontab; then
		exeinto /usr/$(exhost --target)/libexec
		newexe script/check_system_crontabs.sh check_system_crontabs

		insinto /etc
		newins "${FILES}"/crontab.2 crontab
	fi

	exeinto /usr/$(exhost --target)/libexec
	doexe fcron
	exeopts -m 4710 -o ${rootuser} -g fcron
	doexe fcronsighup

	diropts -m 0750
	keepdir /etc/cron.{hourly,daily,weekly,monthly}
	diropts -m 0750 -o root -g cron
	keepdir /var/spool/cron
	diropts -m 0750
	keepdir /var/spool/cron/lastrun
	diropts -m 1730 -o root -g cron
	keepdir /var/spool/cron/crontabs


	diropts -m 6770 -o fcron -g fcron
	keepdir /var/spool/fcron

	exeopts -m 6755 -o fcron -g fcron
	exeinto /usr/$(exhost --target)/bin
	doexe fcrontab fcrondyn

	diropts -m 0750 -o ${rootuser} -g fcron
	dodir /etc/fcron
	insinto /etc/fcron
	insopts -m 0640 -o ${rootuser} -g fcron
	doins files/fcron.{allow,deny,conf}

	if option system-crontab; then
		dosym fcrontab /usr/$(exhost --target)/bin/crontab

		insopts -m 0640 -o ${rootuser} -g fcron
		insinto /etc/fcron
		newins "${FILES}"/fcrontab.2 fcrontab

	fi

	#fowners cron:cron \
	#	/var/spool/fcron \
	#	/usr/bin/fcron{dyn,tab}

	# fcronsighup needs to be suid root, because it sends a HUP to the
	# running fcron daemon, but only has to be called by the fcron group
	# anyway
	#fowners ${rootuser}:cron \
	#	/usr/libexec/fcronsighup \
	#	/etc/fcron/fcron.{allow,deny,conf} \
	#	/etc/fcron

	#fperms 6770 /var/spool/fcron
	#fperms 6775 /usr/bin/fcron{dyn,tab}

	#fperms 4710 /usr/libexec/fcronsighup

	#fperms 0750 /etc/fcron
	#fperms 0640 /etc/fcron/fcron.{allow,deny,conf}

	pamd_mimic_system fcron auth account session
	cat > "${TEMP}"/fcrontab.pam <<- EOF
	# Don't ask for the user's password; fcrontab will only allow to
	# change user if running as root.
	auth		sufficient		pam_permit.so

	# Still use the system-auth stack for account and session as the
	# sysadmin might have set up stuff properly, and also avoids
	# sidestepping limits (since fcrontab will run \$EDITOR).
	account		include			system-auth
	session		include			system-auth
	EOF
	newpamd "${TEMP}"/fcrontab.pam fcrontab

	#newinitd "${FILES}"/fcron.init-r5 fcron
	#systemd_newunit "${WORK}/script/fcron.init.systemd" fcron.service

	#newconfd "${FILES}"/fcron.confd fcron

	local DOCS=( MANIFEST VERSION "${WORKBASE}/crontab")
	DOCS+=( doc/en/txt/{readme,thanks,faq,todo,relnotes,changes}.txt )

	local HTML_DOCS=( doc/en/HTML/. )

	einstalldocs

	newdoc files/fcron.conf fcron.conf.sample
	doman doc/en/man/*.{1,5,8}

	for lang in fr; do
		option l10n_${lang} || continue

		doman -i18n=${lang} doc/${lang}/man/*.{1,5,8}

		docinto html/${lang}
		dodoc -r doc/${lang}/HTML/.
	done
}

pkg_postinst() {
	if [[ -z "${REPLACING_IDS}" ]]; then
		# This is a new installation
		elog "Make sure you execute"
		elog ""
		elog "  # cave config ${CATEGORY}/${PN}"
		elog ""
		elog "to install the default systab on this system."
	else
		local v
		for v in ${REPLACING_IDS}; do
			if ! version_is_at_least "3.2.1" ${v}; then
				# This is an upgrade

				elog "fcron's default systab was updated since your last installation."
				elog "You can use"
				elog ""
				elog "  # cave config ${CATEGORY}/${PN}"
				elog ""
				elog "to re-install systab (do not call this command before you"
				elog "have merged your configuration files)."

				# Show this elog only once
				break
			fi
		done
	fi

	if ! option system-crontab; then
		echo ""
		ewarn "Remember that fcron will *not* use /etc/cron.d in this configuration"
		ewarn "due to USE=-system-crontab!"
		echo ""
	fi
}

pkg_config() {
	if [[ $(fcrontab -l -u systab 2>/dev/null) ]]; then
		eerror "We're not going to make any change to your systab as long as"
		eerror "it contains data; please clear it before proceeding."
		eerror "You can do that with"
		eerror ""
		eerror "  # fcrontab -u systab -r"
		eerror ""
		eerror "However you are advised to do this by hand to review existing"
		eerror "systab just in case."
		return 1
	fi

	if option system-crontab; then
		elog "This is going to set up fcron to execute check_system_crontabs."
		elog "In this configuration, /etc/crontab and /etc/cron.d are respected."
		elog "Per default fcron will check for modifications every 10 minutes."
		/usr/libexec/check_system_crontabs -v -i -f
	else
		elog "This is going to set up fcron to set up a default systab that"
		elog "executes /etc/cron.{hourly,daily,weekly,monthly} but will ignore"
		elog "/etc/crontab and /etc/cron.d."
		fcrontab -u systab - <<- EOF
		!serial(true)
		00   *    *    *    *     /bin/rm -f /var/spool/cron/lastrun/cron.hourly
		00   00   *    *    *     /bin/rm -f /var/spool/cron/lastrun/cron.daily
		00   00   *    *    6     /bin/rm -f /var/spool/cron/lastrun/cron.weekly
		00   00   1    *    *     /bin/rm -f /var/spool/cron/lastrun/cron.monthly
		*/10 *    *    *    *     /usr/bin/test -x /usr/sbin/run-crons && /usr/sbin/run-crons
		!serial(false)
		EOF
	fi
}
